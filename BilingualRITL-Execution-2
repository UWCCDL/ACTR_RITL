(clear-all)

(define-model execution

(chunk-type ritl-stimulus x y)
(chunk-type ritl-instructions first second third)
(chunk-type scratchpad x y result position state task)
(chunk-type calculation task type operator arg1 arg2)

(add-dm (stimulus isa ritl-stimulus 
x 5 
y 6))

(add-dm (inst isa ritl-instructions first 'add second 'half third 'double)
(calculation isa chunk)
)

(p calculate-x
  "Calculate x and save on scratchpad"
  ?imaginal>
    state        free
  =imaginal>
    isa          scratchpad
    x            =nil
  =visual>
    isa          visual-object
    status       x
    value       =X

 =retrieval>
    isa ritl-instructions
    first =add

==>

  +goal>
    isa calculation
    type         unary

 +imaginal>
    isa scratchpad
    x         =x+1

)

(p calculate-both
"Calculate the combine x and y and save on scratchpad"
  ?imaginal>
    state        free
  =imaginal>
    isa          scratchpad
    result            nil

==>

  +goal>
    isa calculate-result

)


)